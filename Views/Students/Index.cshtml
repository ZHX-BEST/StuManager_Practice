@model IEnumerable<StuManager_Practice.Models.Student>
    @*IEnumerable<>引入模型可以循环使用,用于查询表中数据*@

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@* Html助手类语法在解析式都被编译成Html代码 *@
<p>
    @*  @Html.ActionLink()显示超链接的另一种方式 *@
    @Html.ActionLink("Create New", "Create", new { id = 1 }, new { @class = "btn btn-primary" })
</p>
<table class="table">
    <tr>
        <th>
            @* @Html.DisplayNameFor()显示属性名 *@
            @Html.DisplayNameFor(model => model.Course.CourseName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentClass.ClassName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @* @Html.DisplayFor()显示属性值 *@
            @Html.DisplayFor(modelItem => item.Course.CourseName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentClass.ClassName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Age)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.StudentId }) |
            @Html.ActionLink("Details", "Details", new { id=item.StudentId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.StudentId })
        </td>
    </tr>
}

</table>
